[{"C:\\GIT\\teste.estudos\\Aleatorios\\football-stats\\src\\index.tsx":"1","C:\\GIT\\teste.estudos\\Aleatorios\\football-stats\\src\\App.tsx":"2","C:\\GIT\\teste.estudos\\Aleatorios\\football-stats\\src\\styles.tsx":"3","C:\\GIT\\teste.estudos\\Aleatorios\\football-stats\\src\\services\\client.ts":"4","C:\\GIT\\teste.estudos\\Aleatorios\\football-stats\\src\\pages\\Login\\Login.tsx":"5","C:\\GIT\\teste.estudos\\Aleatorios\\football-stats\\src\\pages\\Login\\styles.tsx":"6","C:\\GIT\\teste.estudos\\Aleatorios\\football-stats\\src\\pages\\Home\\Home.tsx":"7","C:\\GIT\\teste.estudos\\Aleatorios\\football-stats\\src\\pages\\Home\\styles.tsx":"8","C:\\GIT\\teste.estudos\\Aleatorios\\football-stats\\src\\utils\\index.tsx":"9"},{"size":303,"mtime":1668981800660,"results":"10","hashOfConfig":"11"},{"size":729,"mtime":1668983164740,"results":"12","hashOfConfig":"11"},{"size":233,"mtime":1668981090784,"results":"13","hashOfConfig":"11"},{"size":141,"mtime":1668956944308,"results":"14","hashOfConfig":"11"},{"size":1846,"mtime":1668986231476,"results":"15","hashOfConfig":"11"},{"size":1274,"mtime":1668986249524,"results":"16","hashOfConfig":"11"},{"size":4348,"mtime":1668996622783,"results":"17","hashOfConfig":"11"},{"size":531,"mtime":1668987282124,"results":"18","hashOfConfig":"11"},{"size":250,"mtime":1668988580222,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bcjwl4",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\GIT\\teste.estudos\\Aleatorios\\football-stats\\src\\index.tsx",[],[],"C:\\GIT\\teste.estudos\\Aleatorios\\football-stats\\src\\App.tsx",[],[],"C:\\GIT\\teste.estudos\\Aleatorios\\football-stats\\src\\styles.tsx",[],[],"C:\\GIT\\teste.estudos\\Aleatorios\\football-stats\\src\\services\\client.ts",[],[],[],"C:\\GIT\\teste.estudos\\Aleatorios\\football-stats\\src\\pages\\Login\\Login.tsx",[],[],"C:\\GIT\\teste.estudos\\Aleatorios\\football-stats\\src\\pages\\Login\\styles.tsx",[],[],"C:\\GIT\\teste.estudos\\Aleatorios\\football-stats\\src\\pages\\Home\\Home.tsx",["49","50","51","52","53","54","55"],[],"import { useEffect, useState } from \"react\";\r\nimport client from \"../../services/client\";\r\nimport { HomeContainer, HomeStyle, StyledSelect } from \"./styles\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { getHeadersRequest } from \"../../utils\";\r\nimport { Country, LeagueData } from \"../../interfaces/Home/home\";\r\n\r\nfunction Home() {\r\n  const [countries, setCountries] = useState<Country[]>([]);\r\n  const [selectedCountry, setSelectedCountry] = useState<string>(\"\");\r\n  const [seasons, setSeasons] = useState([]);\r\n  const [selectedSeason, setSelectedSeason] = useState(0);\r\n  const [leagues, setLeagues] = useState([]);\r\n  const [selectedLeague, setSelectedLeague] = useState(\"\");\r\n  const headersRequest = getHeadersRequest();\r\n\r\n  const fetchCountries = async () => {\r\n    try {\r\n      const { data, status } = await client.get(\"/countries\", headersRequest);\r\n      setCountries(data.response);\r\n    } catch (e) {\r\n      console.error(e);\r\n      toast.error(\"Ops. Ocorreu um erro ao buscar os países. Tente novamente\");\r\n    }\r\n  };\r\n\r\n  const fetchSeason = async () => {\r\n    try {\r\n      const { data, status } = await client.get(\"/leagues/seasons\", headersRequest);\r\n      setSeasons(data.response);\r\n    } catch (e) {\r\n      console.error(e);\r\n      toast.error(\"Ops. Ocorreu um erro ao buscar os países. Tente novamente\");\r\n    }\r\n  };\r\n\r\n  const fetchLeagues = async () => {\r\n    try {\r\n      const { data, status } = await client.get(\r\n        `/leagues?country=${selectedCountry}`,\r\n        headersRequest\r\n      );\r\n      setLeagues(data.response);\r\n    } catch (e) {\r\n      console.error(e);\r\n      toast.error(\"Ops. Ocorreu um erro ao buscar os países. Tente novamente\");\r\n    }\r\n  };\r\n\r\n  const fetchTeams = async () => {\r\n    try {\r\n      const { data, status } = await client.get(`/teams?league=${selectedLeague}`, headersRequest);\r\n      setLeagues(data.response);\r\n    } catch (e) {\r\n      console.error(e);\r\n      toast.error(\"Ops. Ocorreu um erro ao buscar os países. Tente novamente\");\r\n    }\r\n  };\r\n\r\n  console.log(selectedCountry);\r\n\r\n  useEffect(() => {\r\n    fetchCountries();\r\n    fetchSeason();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    selectedCountry && fetchLeagues();\r\n  }, [selectedCountry]);\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n      <HomeStyle>\r\n        <HomeContainer>\r\n          <div>\r\n            <label>\r\n              Selecione um país\r\n              <StyledSelect onChange={({ target }) => setSelectedCountry(target.value)}>\r\n                <option selected value=\"\">\r\n                  Selecione\r\n                </option>\r\n                {countries?.map((country: Country) => {\r\n                  return <option value={country.name}>{country.name}</option>;\r\n                })}\r\n              </StyledSelect>\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              Selecione uma temporada\r\n              <StyledSelect\r\n                disabled={!selectedCountry}\r\n                onChange={({ target }) => setSelectedSeason(Number(target.value))}\r\n              >\r\n                <option selected value=\"\">\r\n                  Selecione\r\n                </option>\r\n                {seasons?.map((season: number) => {\r\n                  return <option value={season}>{season}</option>;\r\n                })}\r\n              </StyledSelect>\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              Selecione uma liga\r\n              <StyledSelect\r\n                disabled={!selectedSeason}\r\n                onChange={({ target }) => setSelectedLeague(target.value)}\r\n              >\r\n                <option selected value=\"\">\r\n                  Selecione\r\n                </option>\r\n                {leagues?.map(({ league }: LeagueData) => {\r\n                  return <option value={league.id}>{league.name}</option>;\r\n                })}\r\n              </StyledSelect>\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              Selecione um time\r\n              <StyledSelect disabled={!selectedLeague}>\r\n                <option selected value=\"\">\r\n                  Selecione\r\n                </option>\r\n              </StyledSelect>\r\n            </label>\r\n          </div>\r\n        </HomeContainer>\r\n      </HomeStyle>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\GIT\\teste.estudos\\Aleatorios\\football-stats\\src\\pages\\Home\\styles.tsx",[],[],"C:\\GIT\\teste.estudos\\Aleatorios\\football-stats\\src\\utils\\index.tsx",[],[],{"ruleId":"56","severity":1,"message":"57","line":19,"column":21,"nodeType":"58","messageId":"59","endLine":19,"endColumn":27},{"ruleId":"56","severity":1,"message":"57","line":29,"column":21,"nodeType":"58","messageId":"59","endLine":29,"endColumn":27},{"ruleId":"56","severity":1,"message":"57","line":39,"column":21,"nodeType":"58","messageId":"59","endLine":39,"endColumn":27},{"ruleId":"56","severity":1,"message":"60","line":50,"column":9,"nodeType":"58","messageId":"59","endLine":50,"endColumn":19},{"ruleId":"56","severity":1,"message":"57","line":52,"column":21,"nodeType":"58","messageId":"59","endLine":52,"endColumn":27},{"ruleId":"61","severity":1,"message":"62","line":65,"column":6,"nodeType":"63","endLine":65,"endColumn":8,"suggestions":"64"},{"ruleId":"61","severity":1,"message":"65","line":69,"column":6,"nodeType":"63","endLine":69,"endColumn":23,"suggestions":"66"},"@typescript-eslint/no-unused-vars","'status' is assigned a value but never used.","Identifier","unusedVar","'fetchTeams' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchCountries' and 'fetchSeason'. Either include them or remove the dependency array.","ArrayExpression",["67"],"React Hook useEffect has a missing dependency: 'fetchLeagues'. Either include it or remove the dependency array.",["68"],{"desc":"69","fix":"70"},{"desc":"71","fix":"72"},"Update the dependencies array to be: [fetchCountries, fetchSeason]",{"range":"73","text":"74"},"Update the dependencies array to be: [fetchLeagues, selectedCountry]",{"range":"75","text":"76"},[2147,2149],"[fetchCountries, fetchSeason]",[2221,2238],"[fetchLeagues, selectedCountry]"]